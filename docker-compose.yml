version: '2'
services:
  #  ingestion:
  #    image: os/ingest-image
  #    container_name: ingestion
  #    ports:
  #      - "3002:3002"
  #    networks:
  #      - microservices

  mongo:
    image: mongo:4-bionic
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_DATABASE=profiles
    volumes:
      - ./init/mongo:/docker-entrypoint-initdb.d
    networks:
      - microservices

  postgres:
    image: postgres:11-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "vertx-in-action"
    volumes:
      - ./init/postgres:/docker-entrypoint-initdb.d/
    networks:
      - microservices
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks: [ "microservices" ]

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks: [ "microservices" ]

  artemis:
    image: vromero/activemq-artemis:2.15-latest
    ports:
      - "5672:5672"
      - "61616:61616"
    environment:
      ENABLE_JMX_EXPORTER: "true"
      ARTEMIS_MIN_MEMORY: "1512M"
      ARTEMIS_MAX_MEMORY: "2000M"
      ARTEMIS_USERNAME: "artemis"
      ARTEMIS_PASSWORD: "simetraehcapa"
    networks:
      - microservices

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - microservices

networks:
  microservices:
